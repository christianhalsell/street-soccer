{"version":3,"sources":["components/TeamCreator.jsx","App.js","index.js"],"names":["TeamCreator","randomRoster","useState","numberOfPlayers","setNumberOfPlayers","numberOfTeams","setNumberOfTeams","gameRound","setGameRound","error","setError","roundNumber","setRoundNumber","roundScore","setRoundScore","totalScore","setTotalScore","finalScores","setFinalScores","finalScoresOrdered","setFinalScoresOrdered","startRoundDisabled","setStartRoundDisabled","submitDisabled","setSubmitDisabled","highestScore","setHighestScore","tempRoster","tempTeams","tempScores","tempGameRound","useEffect","Object","values","sort","a","b","length","console","log","addScore","e","preventDefault","newScoreArray","target","getAttribute","parseInt","value","checkForEmptyScores","emptyScoreCheck","i","style","padding","onSubmit","push","addPlayers","createRound","originalPlayers","randomPlayers","j","Math","floor","random","temp","randomizePlayers","k","createTeam","tempIdx","createGameRound","checkForErrorsAndBeginRound","className","disabled","type","min","onChange","fontSize","marginBottom","fontWeight","color","sortedScores","teamObj","tempFinalObj","tempArray","x","firstTeam","score","secondTeam","scoreObj","sortable","key","sortFinalScores","display","flex","map","game","idx","background","paddingBottom","team","alignItems","backgroundColor","player","textAlign","width","height","keys","item","highlight","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAoUeA,EAlUK,WAClB,IAsBIC,EAtBJ,EAA8CC,mBAAS,IAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAA0CF,mBAAS,GAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA0BN,mBAAS,MAAnC,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAAsCR,mBAAS,GAA/C,mBAAOS,EAAP,KAAoBC,EAApB,KACA,EAAoCV,mBAAS,IAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAAoCZ,mBAAS,IAA7C,mBAAOa,EAAP,KAAmBC,EAAnB,KACA,EAAsCd,mBAAS,IAA/C,mBAAOe,EAAP,KAAoBC,EAApB,KACA,EAAoDhB,mBAAS,IAA7D,mBAAOiB,EAAP,KAA2BC,EAA3B,KACA,EAAoDlB,oBAAS,GAA7D,mBAAOmB,EAAP,KAA2BC,EAA3B,KACA,EAA4CpB,oBAAS,GAArD,mBAAOqB,EAAP,KAAuBC,EAAvB,KAEA,EAAwCtB,oBAAU,GAAlD,mBAAOuB,EAAP,KAAqBC,EAArB,KAMIC,GAAa,GACbC,GAAY,GACZC,GAAa,GACbC,GAAgB,GAIpBC,qBAAU,WACR,IAAIN,EAAeO,OAAOC,OAAOhB,GAAaiB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KACjEV,EAAgBD,EAAaA,EAAaY,OAAS,MAClD,CAACpB,IAEJc,qBAAU,WACRO,QAAQC,IAAIpB,KACX,CAACA,IAGJ,IAAMqB,GAAW,SAAAC,GACfA,EAAEC,iBACF,IAAMC,EAAa,YAAO9B,GAC1B8B,EAAcF,EAAEG,OAAOC,aAAa,eAAeJ,EAAEG,OAAOC,aAAa,cAAgBC,SAASL,EAAEG,OAAOG,MAAO,IAElHjC,EAAc,YAAI6B,IAClBK,MAGIA,GAAsB,WAG1B,IAFA,IAAIC,GAAkB,EAEbC,EAAI,EAAGA,EAAIrC,EAAWwB,OAAQa,IAC/BrC,EAAWqC,GAAGb,OAAS,IACzBY,GAAkB,GAIxBzB,EAAkByB,IAoLpB,OACE,sBAAKE,MAAO,CAACC,QAAS,IAAtB,UACE,uBAAMC,SAdY,SAAAZ,GACpBA,EAAEC,iBAtKe,WACjBf,GAAa,GACb,IAAK,IAAIuB,EAAI,EAAGA,GAAK/C,EAAiB+C,IACpCvB,GAAW2B,KAAKJ,GAoKlBK,GAhKkB,WAElB3B,GAAY,GACZC,GAAa,GAEb,IAAK,IAAIqB,EAAI,EAAGA,EAAI7C,EAAe6C,IACjCtB,GAAU0B,KAAK,IAGjB,IAAK,IAAIJ,EAAI,EAAGA,EAAI7C,EAAgB,EAAG6C,IACrCpB,GAAcwB,KAAK,IACnBzB,GAAWyB,KAAK,IAsJlBE,GAEAvD,EApJuB,SAACwD,GAExB,IADA,IAAMC,EAAgBD,EACbP,EAAIQ,EAAcrB,OAAS,EAAGa,EAAI,EAAGA,IAAK,CACjD,IAAIS,EAAIC,KAAKC,MAAMD,KAAKE,UAAYZ,EAAI,IACpCa,EAAOL,EAAcR,GACzBQ,EAAcR,GAAKQ,EAAcC,GACjCD,EAAcC,GAAKI,EAGrB,OAAOL,EA2IQM,CAAiBrC,IAxIf,WAEjB,IADA,IAAIuB,EAAI,EACCS,EAAI,EAAGA,EAAIhC,GAAWU,OAAShC,EAAesD,IACrD,IAAK,IAAIM,EAAI,EAAGA,EAAI5D,EAAe4D,IAC7Bf,EAAIvB,GAAWU,SACjBT,GAAUqC,GAAGX,KAAKrD,EAAaiD,IAC/BA,KAoINgB,GA9HsB,WAEtB,IADA,IAAIP,EAAI,EACCT,EAAI,EAAGA,EAAItB,GAAUS,OAAQa,IAAK,CACzC,IAAIiB,EAAUR,EACH,IAANT,GAAaA,EAAI,IAAM,GAC1BS,IAEF7B,GAAcqC,GAASb,KAAK1B,GAAUsB,KAwHxCkB,GA1BkC,WAClC,GAAIzC,GAAWU,OAAST,GAAUS,OAChC3B,EAAS,wDAAD,OAAyDiB,GAAWU,OAApE,oBAAsFT,GAAUS,aAD1G,CAKA,GAAIhC,EAAgB,IAAM,EAS1B,OAJAO,EAAeD,EAAc,GAC7BG,EAAce,IACdrB,EAAasB,IACbR,GAAsB,GACfZ,EAAS,MARdA,EAAS,sCAoBX2D,IAKE,UACE,sBAAKC,UAAU,WAAf,UACE,gCAAO,sDACP,uBAAOC,SAAUlD,EAAoBmD,KAAK,SAASC,IAAI,IAAI1B,MAAO5C,EAAiBuE,SAAU,SAAAjC,GAAC,OAAIrC,EAAmB0C,SAASL,EAAEG,OAAOG,cAEzI,sBAAKuB,UAAU,WAAf,UACE,gCAAO,oDACP,uBAAOC,SAAUlD,EAAoBmD,KAAK,SAASC,IAAI,IAAI1B,MAAO1C,EAAeqE,SAAW,SAAAjC,GAAC,OAAInC,EAAiBwC,SAASL,EAAEG,OAAOG,cAEtI,qBAAKuB,UAAU,WAAf,SACE,wBAAQC,SAAUlD,EAAoB8B,MAAO,CAAEwB,SAAU,GAAIC,aAAc,GAAIC,WAAY,KAAML,KAAK,SAAtG,8BAGJ,uBACC/D,GACC,qBAAK6D,UAAU,WAAWnB,MAAO,CAAC2B,MAAO,OAAzC,SAAkDrE,KAGlDA,GAASF,EAAU8B,OAAS,GAC5B,gCACE,uBAAMgB,SAnII,SAAAZ,GAChBA,EAAEC,iBAMF,IALA,IAGIqC,EAHEC,EAAU,GACVC,EAAY,eAAOhE,GACnBiE,EAAS,YAAOnE,GAGboE,EAAI,EAAGA,EAAIhF,EAAiBgF,IACnCH,EAAQ,YAAcG,EAAI,IAAM,GAE3BF,EAAa,YAAcE,EAAI,MAClCF,EAAa,YAAcE,EAAI,IAAM,GAIzC,IAAK,IAAIjC,EAAI,EAAGA,EAAIrC,EAAWwB,OAAQa,IACrC,GAAIrC,EAAWqC,GAAG,KAAOrC,EAAWqC,GAAG,GAAI,CACzCZ,QAAQC,IAAI,cAEZ,IAAK,IAAIoB,EAAI,EAAGA,EAAIpD,EAAU2C,GAAG,GAAGb,OAAQsB,IAAK,CAC/C,IAAMyB,EAAY7E,EAAU2C,GAAG,GAAGS,GAClCqB,EAAQ,WAAaI,GAAWC,MAlItB,EAmIVJ,EAAa,WAAaG,IAnIhB,EAqIZ,IAAK,IAAIzB,EAAI,EAAGA,EAAIpD,EAAU2C,GAAG,GAAGb,OAAQsB,IAAK,CAC/C,IAAM2B,EAAa/E,EAAU2C,GAAG,GAAGS,GACnCqB,EAAQ,WAAaM,GAAYD,MAvIvB,EAwIVJ,EAAa,WAAaK,IAxIhB,QA0IP,GAAIzE,EAAWqC,GAAG,GAAKrC,EAAWqC,GAAG,GAAI,CAC9CZ,QAAQC,IAAI,mBAEZ,IAAK,IAAIoB,EAAI,EAAGA,EAAIpD,EAAU2C,GAAG,GAAGb,OAAQsB,IAAK,CAC/C,IAAMyB,EAAY7E,EAAU2C,GAAG,GAAGS,GAClCqB,EAAQ,WAAaI,GAAWC,MA9IrB,EA+IXJ,EAAa,WAAaG,IA/If,EAiJb,IAAK,IAAIzB,EAAI,EAAGA,EAAIpD,EAAU2C,GAAG,GAAGb,OAAQsB,IAAK,CAC/C,IAAM2B,EAAa/E,EAAU2C,GAAG,GAAGS,GACnCqB,EAAQ,WAAaM,GAAYD,MArJvB,EAsJVJ,EAAa,WAAaK,IAtJhB,QAwJP,GAAIzE,EAAWqC,GAAG,GAAKrC,EAAWqC,GAAG,GAAI,CAC9CZ,QAAQC,IAAI,kBAEZ,IAAK,IAAIoB,EAAI,EAAGA,EAAIpD,EAAU2C,GAAG,GAAGb,OAAQsB,IAAK,CAC/C,IAAMyB,EAAY7E,EAAU2C,GAAG,GAAGS,GAClCqB,EAAQ,WAAaI,GAAWC,MA7JtB,EA8JVJ,EAAa,WAAaG,IA9JhB,EAgKZ,IAAK,IAAIzB,EAAI,EAAGA,EAAIpD,EAAU2C,GAAG,GAAGb,OAAQsB,IAAK,CAC/C,IAAM2B,EAAa/E,EAAU2C,GAAG,GAAGS,GACnCqB,EAAQ,WAAaM,GAAYD,MAhKtB,EAiKXJ,EAAa,WAAaK,IAjKf,GAsKjBJ,EAAU5B,KAAK0B,GACfhE,EAAckE,GACdhE,EAAe+D,GAEfF,EAzEsB,SAAAQ,GACtB,IAAIC,EAAW,GACf,IAAK,IAAIC,KAAOF,EACdC,EAASlC,KAAK,CAACmC,EAAKF,EAASE,KAI/B,OADeD,EAAStD,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAE,GAAKD,EAAE,MAmEjCuD,CAAgBT,GAC/B7D,EAAsB2D,GAWtBvD,GAAkB,GAClBF,GAAsB,IAwDhB,UACE,qBAAK6B,MAAO,CAACwC,QAAS,OAAQf,aAAc,IAA5C,SACE,sBAAKzB,MAAO,CAAEwB,SAAU,GAAIC,aAAc,GAAIC,WAAY,IAAKe,KAAM,GAArE,mBAAiFjF,QAGjFF,GAASF,EAAUsF,KAAI,SAACC,EAAMC,GAAP,OACvB,sBAAgB5C,MAAO,CAAE6C,WAAY,OAAQ5C,QAAS,GAAIwB,aAAc,IAAxE,UACE,sBAAKzB,MAAO,CAAEwB,SAAU,GAAIE,WAAY,IAAKoB,cAAe,IAA5D,mBACSF,EAAM,KAEdD,EAAKD,KAAI,SAACK,EAAMhD,GAAP,OACR,sBAAgBC,MAAO,CAACwC,QAAS,OAAQQ,WAAY,SAAU/C,QAAS,GAAIgD,gBAAuB,IAANlD,EAAU,OAAS,QAAhH,UACE,sBAAKC,MAAO,CAACyC,KAAM,GAAnB,UACE,uBAAMzC,MAAO,CAAEwB,SAAU,GAAIE,WAAY,QAAzC,kBAAyD3B,EAAI,EAA7D,QACCgD,EAAKL,KAAI,SAACQ,EAAQnD,GAAT,OACR,iCAAoBmD,EAAQnD,EAAIgD,EAAK7D,OAAS,EAAI,KAAO,OAA9CgE,SAGf,qBAAKlD,MAAO,CAACyC,KAAM,EAAGU,UAAW,SAAjC,SACE,uBACEnD,MAAO,CAACwB,SAAU,GAAI4B,MAAO,GAAIC,OAAO,GAAIF,UAAW,UACvD,aAAYP,EACZ,YAAW7C,EACXsB,KAAK,SACLC,IAAI,IACJC,SAAUlC,SAdN0D,QALJJ,MA0BZ,sBAAK3C,MAAO,CAACwC,QAAS,OAAQf,aAAc,IAA5C,UACE,qBAAKzB,MAAO,CAAEwB,SAAU,GAAIC,aAAc,GAAIC,WAAY,IAAKe,KAAM,KACrE,wBAAQzC,MAAO,CAAEwB,SAAU,GAAIC,aAAc,GAAIC,WAAY,KAAML,KAAK,SAASD,SAAUhD,EAA3F,kCAKFF,GACA,sBAAK8B,MAAO,CAACwC,QAAS,QAAtB,UACE,sBAAKxC,MAAO,CAACyC,KAAM,GAAnB,UACE,oDAEE5D,OAAOyE,KAAKxF,GAAa4E,KAAI,SAAAa,GAC3B,IAAMC,EAAY1F,EAAYyF,KAAUjF,EAAe,YAAc,GACrE,OAAO,8BAAgB,uBAAM6C,UAAWqC,EAAjB,UAA6BD,EAA7B,KAAqCzF,EAAYyF,OAAvDA,SAIvB,sBAAKvD,MAAO,CAACyC,KAAM,GAAnB,UACE,oDAEEzE,EAAmB0E,KAAI,SAAAa,GAAI,OACzB,gCAAoBA,EAAK,GAAzB,KAA+BA,EAAK,KAA1BA,EAAK,oBC5SpBE,MARf,WACE,OACE,qBAAKtC,UAAU,MAAf,SACE,cAAC,EAAD,OCDNuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.69b0bb87.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nconst TeamCreator = () => {\n  const [numberOfPlayers, setNumberOfPlayers] = useState(16);\n  const [numberOfTeams, setNumberOfTeams] = useState(4);\n  const [gameRound, setGameRound] = useState([]);\n  const [error, setError] = useState(null);\n  const [roundNumber, setRoundNumber] = useState(0);\n  const [roundScore, setRoundScore] = useState([]);\n  const [totalScore, setTotalScore] = useState([]);\n  const [finalScores, setFinalScores] = useState({});\n  const [finalScoresOrdered, setFinalScoresOrdered] = useState([]);\n  const [startRoundDisabled, setStartRoundDisabled] = useState(false);\n  const [submitDisabled, setSubmitDisabled] = useState(true);\n  // const [endGameDisabled, setEndGameDisabled] = useState(true);\n  const [highestScore, setHighestScore] = useState(-1);\n\n  const SCORE_WIN = 3;\n  const SCORE_TIE = 2;\n  const SCORE_LOSS = 1\n\n  let tempRoster = [];\n  let tempTeams = [];\n  let tempScores = [];\n  let tempGameRound = [];\n  let randomRoster;\n\n  // Find highest score\n  useEffect(() => {\n    let highestScore = Object.values(finalScores).sort((a, b) => a - b);\n    setHighestScore(highestScore[highestScore.length - 1]);\n  }, [finalScores]);\n\n  useEffect(() => {\n    console.log(finalScoresOrdered)\n  }, [finalScoresOrdered])\n\n  // Add score to roundScore while entering\n  const addScore = e => {\n    e.preventDefault();\n    const newScoreArray = [...roundScore];\n    newScoreArray[e.target.getAttribute('data-field')][e.target.getAttribute('data-team')] = parseInt(e.target.value, 10);\n\n    setRoundScore([...newScoreArray])\n    checkForEmptyScores();\n  }\n\n  const checkForEmptyScores = () => {\n    let emptyScoreCheck = false;\n\n    for (let i = 0; i < roundScore.length; i++) {       \n        if (roundScore[i].length < 2) {\n          emptyScoreCheck = true\n        }  \n    }\n    \n    setSubmitDisabled(emptyScoreCheck);\n  }\n\n  const addPlayers = () => {\n    tempRoster = [];\n    for (let i = 1; i <= numberOfPlayers; i++) {\n      tempRoster.push(i);\n    }\n  };\n\n  const createRound = () => {\n    // clear tempteams and scores when creating a new round    \n    tempTeams = [];\n    tempScores = [];\n\n    for (let i = 0; i < numberOfTeams; i++) {\n      tempTeams.push([]);\n    }\n\n    for (let i = 0; i < numberOfTeams / 2; i++) {\n      tempGameRound.push([])\n      tempScores.push([]);\n    }\n  };\n\n  const randomizePlayers = (originalPlayers) => {\n    const randomPlayers = originalPlayers\n    for (var i = randomPlayers.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = randomPlayers[i];\n      randomPlayers[i] = randomPlayers[j];\n      randomPlayers[j] = temp;\n    }\n    \n    return randomPlayers;\n  };\n\n  const createTeam = () => {\n    let i = 0;\n    for (let j = 0; j < tempRoster.length / numberOfTeams; j++) {\n      for (let k = 0; k < numberOfTeams; k++) {\n        if (i < tempRoster.length) {\n          tempTeams[k].push(randomRoster[i])\n          i++;\n        }\n      }    \n    }\n  }\n\n  const createGameRound = () => {\n    let j = 0;\n    for (let i = 0; i < tempTeams.length; i++) {      \n      let tempIdx = j\n      if ((i !== 0) && (i % 2 !== 0)) {\n        j++\n      }\n      tempGameRound[tempIdx].push(tempTeams[i])\n    }\n  }\n\n  const sortFinalScores = scoreObj => {\n    let sortable = [];\n    for (let key in scoreObj) {\n      sortable.push([key, scoreObj[key]])\n    }\n    \n    const sorted = sortable.sort((a, b) => b[1] - a[1]);\n    return sorted;\n  }\n\n  // Add round scores to gamesheet\n  const addScores = e => { // here ~CH\n    e.preventDefault();\n    const teamObj = {};\n    const tempFinalObj = {...finalScores};\n    const tempArray = [...totalScore];\n    let sortedScores;\n\n    for (let x = 0; x < numberOfPlayers; x++) {\n      teamObj[\"Player #\" + (x + 1)] = {};\n      \n      if (!tempFinalObj[\"Player #\" + (x + 1)]) {\n        tempFinalObj[\"Player #\" + (x + 1)] = 0\n      }\n    }\n  \n    for (let i = 0; i < roundScore.length; i++) {\n      if (roundScore[i][0] === roundScore[i][1]) {\n        console.log('It\\'s a tie');\n\n        for (let j = 0; j < gameRound[i][0].length; j++) {\n          const firstTeam = gameRound[i][0][j];\n          teamObj[\"Player #\" + firstTeam].score = SCORE_TIE;\n          tempFinalObj[\"Player #\" + firstTeam] += SCORE_TIE;\n        }\n        for (let j = 0; j < gameRound[i][1].length; j++) {\n          const secondTeam = gameRound[i][1][j];\n          teamObj[\"Player #\" + secondTeam].score = SCORE_TIE;\n          tempFinalObj[\"Player #\" + secondTeam] += SCORE_TIE;\n        }\n      } else if (roundScore[i][0] < roundScore[i][1]) {\n        console.log('Second Team Won');\n\n        for (let j = 0; j < gameRound[i][0].length; j++) {\n          const firstTeam = gameRound[i][0][j];\n          teamObj[\"Player #\" + firstTeam].score = SCORE_LOSS;\n          tempFinalObj[\"Player #\" + firstTeam] += SCORE_LOSS;\n        }\n        for (let j = 0; j < gameRound[i][1].length; j++) {\n          const secondTeam = gameRound[i][1][j];\n          teamObj[\"Player #\" + secondTeam].score = SCORE_WIN;\n          tempFinalObj[\"Player #\" + secondTeam] += SCORE_WIN;\n        }\n      } else if (roundScore[i][0] > roundScore[i][1]) {\n        console.log('First Team won');\n\n        for (let j = 0; j < gameRound[i][0].length; j++) {\n          const firstTeam = gameRound[i][0][j];          \n          teamObj[\"Player #\" + firstTeam].score = SCORE_WIN;\n          tempFinalObj[\"Player #\" + firstTeam] += SCORE_WIN;\n        }\n        for (let j = 0; j < gameRound[i][1].length; j++) {\n          const secondTeam = gameRound[i][1][j];\n          teamObj[\"Player #\" + secondTeam].score = SCORE_LOSS;\n          tempFinalObj[\"Player #\" + secondTeam] += SCORE_LOSS;\n        }\n      }\n    }  \n    \n    tempArray.push(teamObj);\n    setTotalScore(tempArray);\n    setFinalScores(tempFinalObj);\n\n    sortedScores = sortFinalScores(tempFinalObj)\n    setFinalScoresOrdered(sortedScores);\n\n    // orderFinalScores\n    // let sortable = [];\n    // for (let key in tempFinalObj) {\n    //   sortable.push([key, tempFinalObj[key]])\n    // }\n    \n    // const sorted = sortable.sort((a, b) => b[1] - a[1]);\n    // END\n\n    setSubmitDisabled(true);\n    setStartRoundDisabled(false);\n  }\n\n  // check for errors. If no errors, begin round\n  const checkForErrorsAndBeginRound = () => {\n    if (tempRoster.length < tempTeams.length) {\n      setError(`You need more players than number of teams: Players: ${tempRoster.length}, Teams: ${tempTeams.length}`);\n      return;\n    }\n\n    if (numberOfTeams % 2 !== 0) {\n      setError(\"You need an even number of teams.\");\n      return;\n    }\n\n    setRoundNumber(roundNumber + 1);\n    setRoundScore(tempScores)\n    setGameRound(tempGameRound);\n    setStartRoundDisabled(true);\n    return setError(null);\n  };\n\n  const generateTeams = e => {\n    e.preventDefault();\n    addPlayers();\n    createRound();\n    \n    randomRoster = randomizePlayers(tempRoster);\n\n    createTeam();\n    createGameRound();\n    checkForErrorsAndBeginRound();\n  };\n\n  return (\n    <div style={{padding: 10}}>\n      <form onSubmit={generateTeams}>\n        <div className=\"inputRow\">\n          <label><b>Number of Players: </b></label>\n          <input disabled={startRoundDisabled} type=\"number\" min=\"1\" value={numberOfPlayers} onChange={e => setNumberOfPlayers(parseInt(e.target.value))} />\n        </div>\n        <div className=\"inputRow\">\n          <label><b>Number of Teams: </b></label>\n          <input disabled={startRoundDisabled} type=\"number\" min=\"1\" value={numberOfTeams} onChange={ e => setNumberOfTeams(parseInt(e.target.value)) } />\n        </div>\n        <div className=\"inputRow\">\n          <button disabled={startRoundDisabled} style={{ fontSize: 24, marginBottom: 10, fontWeight: 700}} type=\"submit\">Start Round</button>\n        </div>\n      </form>\n      <br />\n      {error && (\n        <div className=\"inputRow\" style={{color: 'red'}}>{error}</div>\n      )}\n  \n      {!error && gameRound.length > 0 &&\n        <div>\n          <form onSubmit={addScores}>\n            <div style={{display: 'flex', marginBottom: 10}}>\n              <div style={{ fontSize: 30, marginBottom: 10, fontWeight: 700, flex: 1 }}>Round {roundNumber}</div>\n            </div>\n\n            {!error && gameRound.map((game, idx) => (\n              <div key={game} style={{ background: '#eee', padding: 10, marginBottom: 10}}>\n                <div style={{ fontSize: 26, fontWeight: 700, paddingBottom: 10 }}>\n                  Field {idx + 1}\n                </div>\n                {game.map((team, i) => (\n                  <div key={team} style={{display: 'flex', alignItems: 'center', padding: 10, backgroundColor: i === 0 ? '#f66' : '#aaf' }}>\n                    <div style={{flex: 4}}>  \n                      <span style={{ fontSize: 22, fontWeight: 'bold' }}>Team {i + 1}: </span>\n                      {team.map((player, i) => (\n                        <span key={player}>{player}{i < team.length - 1 ? ', ' : null}</span>\n                      ))}\n                    </div>\n                    <div style={{flex: 1, textAlign: 'right'}}>\n                      <input \n                        style={{fontSize: 28, width: 50, height:50, textAlign: 'center'}}\n                        data-field={idx}\n                        data-team={i}\n                        type=\"number\" \n                        min=\"0\"\n                        onChange={addScore}\n                      />\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ))}\n            <div style={{display: 'flex', marginBottom: 10}}>\n              <div style={{ fontSize: 30, marginBottom: 10, fontWeight: 700, flex: 1 }}></div>\n              <button style={{ fontSize: 24, marginBottom: 10, fontWeight: 700}} type=\"submit\" disabled={submitDisabled}>Submit Scores</button>\n            </div>\n          </form>\n          \n          {/* TODO: change how this is displayed...eventually */}\n          {!startRoundDisabled && (\n            <div style={{display: 'flex'}}>\n              <div style={{flex: 1}}>\n                <h3>Ordered by Player:</h3>\n                {\n                  Object.keys(finalScores).map(item => {\n                    const highlight = finalScores[item] === highestScore ? 'highlight' : '';\n                    return <div key={item}><span className={highlight}>{item}: {finalScores[item]}</span></div>\n                  })\n                }\n              </div>\n              <div style={{flex: 1}}>\n                <h3>Ordered by Points:</h3>\n                {\n                  finalScoresOrdered.map(item => (\n                    <div key={item[0]}>{item[0]}: {item[1]}</div>\n                  ))\n                }\n              </div>\n            </div>\n          )}\n        </div>\n      }\n    </div>\n  )\n};\n\nexport default TeamCreator\n","import './App.css';\n\nimport TeamCreator from './components/TeamCreator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TeamCreator />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();"],"sourceRoot":""}