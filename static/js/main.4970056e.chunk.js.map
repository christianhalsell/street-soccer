{"version":3,"sources":["components/TeamCreator.jsx","App.js","index.js"],"names":["TeamCreator","randomRoster","useState","numberOfPlayers","setNumberOfPlayers","numberOfTeams","setNumberOfTeams","gameRound","setGameRound","error","setError","roundNumber","setRoundNumber","roundScore","setRoundScore","totalScore","setTotalScore","finalScores","setFinalScores","startRoundDisabled","setStartRoundDisabled","submitDisabled","setSubmitDisabled","highestScore","setHighestScore","tempRoster","tempTeams","tempScores","tempGameRound","useEffect","Object","values","sort","a","b","length","addScore","e","preventDefault","newScoreArray","target","getAttribute","parseInt","value","checkForEmptyScores","emptyScoreCheck","i","style","padding","onSubmit","push","addPlayers","createRound","originalPlayers","randomPlayers","j","Math","floor","random","temp","randomizePlayers","k","createTeam","tempIdx","createGameRound","checkForErrors","className","type","min","onChange","disabled","fontSize","marginBottom","fontWeight","color","teamObj","tempFinalObj","tempArray","x","console","log","firstTeam","score","secondTeam","display","flex","map","game","idx","background","paddingBottom","team","alignItems","backgroundColor","player","textAlign","width","height","data-field","data-team","keys","item","highlight","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPA+ReA,EA7RK,WAAO,IAsBrBC,EAtBoB,EACsBC,mBAAS,IAD/B,mBACjBC,EADiB,KACAC,EADA,OAEkBF,mBAAS,GAF3B,mBAEjBG,EAFiB,KAEFC,EAFE,OAGUJ,mBAAS,IAHnB,mBAGjBK,EAHiB,KAGNC,EAHM,OAIEN,mBAAS,MAJX,mBAIjBO,EAJiB,KAIVC,EAJU,OAKcR,mBAAS,GALvB,mBAKjBS,EALiB,KAKJC,EALI,OAMYV,mBAAS,IANrB,mBAMjBW,EANiB,KAMLC,EANK,OAOYZ,mBAAS,IAPrB,mBAOjBa,EAPiB,KAOLC,EAPK,OAQcd,mBAAS,IARvB,mBAQjBe,EARiB,KAQJC,EARI,OAS4BhB,oBAAS,GATrC,mBASjBiB,EATiB,KASGC,EATH,OAUoBlB,oBAAS,GAV7B,mBAUjBmB,EAViB,KAUDC,EAVC,OAYgBpB,oBAAU,GAZ1B,mBAYjBqB,EAZiB,KAYHC,EAZG,KAkBpBC,EAAa,GACbC,EAAY,GACZC,EAAa,GACbC,EAAgB,GAIpBC,qBAAU,WACR,IAAIN,EAAeO,OAAOC,OAAOd,GAAae,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KACjEV,EAAgBD,EAAaA,EAAaY,OAAS,MAClD,CAAClB,IAGJ,IAAMmB,GAAW,SAAAC,GACfA,EAAEC,iBACF,IAAMC,EAAa,YAAO1B,GAC1B0B,EAAcF,EAAEG,OAAOC,aAAa,eAAeJ,EAAEG,OAAOC,aAAa,cAAgBC,SAASL,EAAEG,OAAOG,MAAO,IAElH7B,EAAc,YAAIyB,IAClBK,MAGIA,GAAsB,WAG1B,IAFA,IAAIC,GAAkB,EAEbC,EAAI,EAAGA,EAAIjC,EAAWsB,OAAQW,IAC/BjC,EAAWiC,GAAGX,OAAS,IACzBU,GAAkB,GAIxBvB,EAAkBuB,IAkKpB,OACE,sBAAKE,MAAO,CAACC,QAAS,IAAtB,UACE,uBAAMC,SAvBY,SAAAZ,GACpBA,EAAEC,iBACF1B,EAAeD,EAAc,GA5IZ,WACjBc,EAAa,GACb,IAAK,IAAIqB,EAAI,EAAGA,GAAK3C,EAAiB2C,IACpCrB,EAAWyB,KAAKJ,GA2IlBK,GAvIkB,WAElBzB,EAAY,GACZC,EAAa,GAEb,IAAK,IAAImB,EAAI,EAAGA,EAAIzC,EAAeyC,IACjCpB,EAAUwB,KAAK,IAGjB,IAAK,IAAIJ,EAAI,EAAGA,EAAIzC,EAAgB,EAAGyC,IACrClB,EAAcsB,KAAK,IACnBvB,EAAWuB,KAAK,IA6HlBE,GAEAnD,EA3HuB,SAACoD,GAExB,IADA,IAAMC,EAAgBD,EACbP,EAAIQ,EAAcnB,OAAS,EAAGW,EAAI,EAAGA,IAAK,CACjD,IAAIS,EAAIC,KAAKC,MAAMD,KAAKE,UAAYZ,EAAI,IACpCa,EAAOL,EAAcR,GACzBQ,EAAcR,GAAKQ,EAAcC,GACjCD,EAAcC,GAAKI,EAGrB,OAAOL,EAkHQM,CAAiBnC,GA/Gf,WAEjB,IADA,IAAIqB,EAAI,EACCS,EAAI,EAAGA,EAAI9B,EAAWU,OAAS9B,EAAekD,IACrD,IAAK,IAAIM,EAAI,EAAGA,EAAIxD,EAAewD,IAC7Bf,EAAIrB,EAAWU,SACjBT,EAAUmC,GAAGX,KAAKjD,EAAa6C,IAC/BA,KA2GNgB,GArGsB,WAEtB,IADA,IAAIP,EAAI,EACCT,EAAI,EAAGA,EAAIpB,EAAUS,OAAQW,IAAK,CACzC,IAAIiB,EAAUR,EACH,IAANT,GAAaA,EAAI,IAAM,GAC1BS,IAEF3B,EAAcmC,GAASb,KAAKxB,EAAUoB,KA+FxCkB,GAxBqB,WACrB,GAAIvC,EAAWU,OAAST,EAAUS,OAChCzB,EAAS,wDAAD,OAAyDe,EAAWU,OAApE,oBAAsFT,EAAUS,aAD1G,CAKA,GAAI9B,EAAgB,IAAM,EAK1B,OAAOK,EAAS,MAJdA,EAAS,sCAkBXuD,GACAnD,EAAca,GACdnB,EAAaoB,GACbR,GAAsB,IASpB,UACE,sBAAK8C,UAAU,WAAf,UACE,gCAAO,sDACP,uBAAOC,KAAK,SAASC,IAAI,IAAIzB,MAAOxC,EAAiBkE,SAAU,SAAAhC,GAAC,OAAIjC,EAAmBsC,SAASL,EAAEG,OAAOG,cAE3G,sBAAKuB,UAAU,WAAf,UACE,gCAAO,oDACP,uBAAOC,KAAK,SAASC,IAAI,IAAIzB,MAAOtC,EAAegE,SAAW,SAAAhC,GAAC,OAAI/B,EAAiBoC,SAASL,EAAEG,OAAOG,cAExG,qBAAKuB,UAAU,WAAf,SACE,wBAAQI,SAAUnD,EAAoB4B,MAAO,CAAEwB,SAAU,GAAIC,aAAc,GAAIC,WAAY,KAAMN,KAAK,SAAtG,8BAIJ,uBACC1D,GACC,qBAAKyD,UAAU,WAAWnB,MAAO,CAAC2B,MAAO,OAAzC,SAAkDjE,KAGlDA,GAASF,EAAU4B,OAAS,GAC5B,gCACE,uBAAMc,SA5HI,SAAAZ,GAChBA,EAAEC,iBAKF,IAJA,IAAMqC,EAAU,GACVC,EAAY,eAAO3D,GACnB4D,EAAS,YAAO9D,GAEb+D,EAAI,EAAGA,EAAI3E,EAAiB2E,IACnCH,EAAQ,YAAcG,EAAI,IAAM,GAE3BF,EAAa,YAAcE,EAAI,MAClCF,EAAa,YAAcE,EAAI,IAAM,GAIzC,IAAK,IAAIhC,EAAI,EAAGA,EAAIjC,EAAWsB,OAAQW,IACrC,GAAIjC,EAAWiC,GAAG,KAAOjC,EAAWiC,GAAG,GAAI,CACzCiC,QAAQC,IAAI,cAEZ,IAAK,IAAIzB,EAAI,EAAGA,EAAIhD,EAAUuC,GAAG,GAAGX,OAAQoB,IAAK,CAC/C,IAAM0B,EAAY1E,EAAUuC,GAAG,GAAGS,GAClCoB,EAAQ,WAAaM,GAAWC,MAnHtB,EAoHVN,EAAa,WAAaK,IApHhB,EAsHZ,IAAK,IAAI1B,EAAI,EAAGA,EAAIhD,EAAUuC,GAAG,GAAGX,OAAQoB,IAAK,CAC/C,IAAM4B,EAAa5E,EAAUuC,GAAG,GAAGS,GACnCoB,EAAQ,WAAaQ,GAAYD,MAxHvB,EAyHVN,EAAa,WAAaO,IAzHhB,QA2HP,GAAItE,EAAWiC,GAAG,GAAKjC,EAAWiC,GAAG,GAAI,CAC9CiC,QAAQC,IAAI,mBAEZ,IAAK,IAAIzB,EAAI,EAAGA,EAAIhD,EAAUuC,GAAG,GAAGX,OAAQoB,IAAK,CAC/C,IAAM0B,EAAY1E,EAAUuC,GAAG,GAAGS,GAClCoB,EAAQ,WAAaM,GAAWC,MA/HrB,EAgIXN,EAAa,WAAaK,IAhIf,EAkIb,IAAK,IAAI1B,EAAI,EAAGA,EAAIhD,EAAUuC,GAAG,GAAGX,OAAQoB,IAAK,CAC/C,IAAM4B,EAAa5E,EAAUuC,GAAG,GAAGS,GACnCoB,EAAQ,WAAaQ,GAAYD,MAtIvB,EAuIVN,EAAa,WAAaO,IAvIhB,QAyIP,GAAItE,EAAWiC,GAAG,GAAKjC,EAAWiC,GAAG,GAAI,CAC9CiC,QAAQC,IAAI,kBAEZ,IAAK,IAAIzB,EAAI,EAAGA,EAAIhD,EAAUuC,GAAG,GAAGX,OAAQoB,IAAK,CAC/C,IAAM0B,EAAY1E,EAAUuC,GAAG,GAAGS,GAClCoB,EAAQ,WAAaM,GAAWC,MA9ItB,EA+IVN,EAAa,WAAaK,IA/IhB,EAiJZ,IAAK,IAAI1B,EAAI,EAAGA,EAAIhD,EAAUuC,GAAG,GAAGX,OAAQoB,IAAK,CAC/C,IAAM4B,EAAa5E,EAAUuC,GAAG,GAAGS,GACnCoB,EAAQ,WAAaQ,GAAYD,MAjJtB,EAkJXN,EAAa,WAAaO,IAlJf,GAuJjBN,EAAU3B,KAAKyB,GACf3D,EAAc6D,GACd3D,EAAe0D,GAEftD,GAAkB,GAElBF,GAAsB,IA6DhB,UACE,qBAAK2B,MAAO,CAACqC,QAAS,OAAQZ,aAAc,IAA5C,SACE,sBAAKzB,MAAO,CAAEwB,SAAU,GAAIC,aAAc,GAAIC,WAAY,IAAKY,KAAM,GAArE,mBAAiF1E,QAIjFF,GAASF,EAAU+E,KAAI,SAACC,EAAMC,GAAP,OACvB,sBAAgBzC,MAAO,CAAE0C,WAAY,OAAQzC,QAAS,GAAIwB,aAAc,IAAxE,UACE,sBAAKzB,MAAO,CAAEwB,SAAU,GAAIE,WAAY,IAAKiB,cAAe,IAA5D,mBACSF,EAAM,KAEdD,EAAKD,KAAI,SAACK,EAAM7C,GAAP,OACR,sBAAgBC,MAAO,CAACqC,QAAS,OAAQQ,WAAY,SAAU5C,QAAS,GAAI6C,gBAAuB,IAAN/C,EAAU,OAAS,QAAhH,UACE,sBAAKC,MAAO,CAACsC,KAAM,GAAnB,UACE,uBAAMtC,MAAO,CAAEwB,SAAU,GAAIE,WAAY,QAAzC,kBAAyD3B,EAAI,EAA7D,QACC6C,EAAKL,KAAI,SAACQ,EAAQhD,GAAT,OACR,iCAAoBgD,EAAQhD,EAAI6C,EAAKxD,OAAS,EAAI,KAAO,OAA9C2D,SAGf,qBAAK/C,MAAO,CAACsC,KAAM,EAAGU,UAAW,SAAjC,SACE,uBACEhD,MAAO,CAACwB,SAAU,GAAIyB,MAAO,GAAIC,OAAO,GAAIF,UAAW,UACvDG,aAAYV,EACZW,YAAWrD,EACXqB,KAAK,SACLC,IAAI,IACJC,SAAUjC,SAdNuD,QALJJ,MA0BZ,sBAAKxC,MAAO,CAACqC,QAAS,OAAQZ,aAAc,IAA5C,UACE,qBAAKzB,MAAO,CAAEwB,SAAU,GAAIC,aAAc,GAAIC,WAAY,IAAKY,KAAM,KACrE,wBAAQtC,MAAO,CAAEwB,SAAU,GAAIC,aAAc,GAAIC,WAAY,KAAMN,KAAK,SAASG,SAAUjD,EAA3F,iCAKFS,OAAOsE,KAAKnF,GAAaqE,KAAI,SAAAe,GAC3B,IAAMC,EAAYrF,EAAYoF,KAAU9E,EAAe,YAAc,GACrE,OAAO,8BAAgB,uBAAM2C,UAAWoC,EAAjB,UAA6BD,EAA7B,KAAqCpF,EAAYoF,OAAvDA,aC1QhBE,MARf,WACE,OACE,qBAAKrC,UAAU,MAAf,SACE,cAAC,EAAD,OCDNsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4970056e.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nconst TeamCreator = () => {\n  const [numberOfPlayers, setNumberOfPlayers] = useState(16);\n  const [numberOfTeams, setNumberOfTeams] = useState(4);\n  const [gameRound, setGameRound] = useState([]);\n  const [error, setError] = useState(null);\n  const [roundNumber, setRoundNumber] = useState(0);\n  const [roundScore, setRoundScore] = useState([]);\n  const [totalScore, setTotalScore] = useState([]);\n  const [finalScores, setFinalScores] = useState({});\n  const [startRoundDisabled, setStartRoundDisabled] = useState(false);\n  const [submitDisabled, setSubmitDisabled] = useState(true);\n  // const [endGameDisabled, setEndGameDisabled] = useState(true);\n  const [highestScore, setHighestScore] = useState(-1);\n\n  const SCORE_WIN = 3;\n  const SCORE_TIE = 2;\n  const SCORE_LOSS = 1\n\n  let tempRoster = [];\n  let tempTeams = [];\n  let tempScores = [];\n  let tempGameRound = [];\n  let randomRoster;\n\n  // Find highest score\n  useEffect(() => {\n    let highestScore = Object.values(finalScores).sort((a, b) => a - b);\n    setHighestScore(highestScore[highestScore.length - 1]);\n  }, [finalScores]);\n\n  // Add score to roundScore while entering\n  const addScore = e => {\n    e.preventDefault();\n    const newScoreArray = [...roundScore];\n    newScoreArray[e.target.getAttribute('data-field')][e.target.getAttribute('data-team')] = parseInt(e.target.value, 10);\n\n    setRoundScore([...newScoreArray])\n    checkForEmptyScores();\n  }\n\n  const checkForEmptyScores = () => {\n    let emptyScoreCheck = false;\n\n    for (let i = 0; i < roundScore.length; i++) {       \n        if (roundScore[i].length < 2) {\n          emptyScoreCheck = true\n        }  \n    }\n    \n    setSubmitDisabled(emptyScoreCheck);\n  }\n\n  const addPlayers = () => {\n    tempRoster = [];\n    for (let i = 1; i <= numberOfPlayers; i++) {\n      tempRoster.push(i);\n    }\n  };\n\n  const createRound = () => {\n    // clear tempteams and scores when creating a new round    \n    tempTeams = [];\n    tempScores = [];\n\n    for (let i = 0; i < numberOfTeams; i++) {\n      tempTeams.push([]);\n    }\n\n    for (let i = 0; i < numberOfTeams / 2; i++) {\n      tempGameRound.push([])\n      tempScores.push([]);\n    }\n  };\n\n  const randomizePlayers = (originalPlayers) => {\n    const randomPlayers = originalPlayers\n    for (var i = randomPlayers.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = randomPlayers[i];\n      randomPlayers[i] = randomPlayers[j];\n      randomPlayers[j] = temp;\n    }\n    \n    return randomPlayers;\n  };\n\n  const createTeam = () => {\n    let i = 0;\n    for (let j = 0; j < tempRoster.length / numberOfTeams; j++) {\n      for (let k = 0; k < numberOfTeams; k++) {\n        if (i < tempRoster.length) {\n          tempTeams[k].push(randomRoster[i])\n          i++;\n        }\n      }    \n    }\n  }\n\n  const createGameRound = () => {\n    let j = 0;\n    for (let i = 0; i < tempTeams.length; i++) {      \n      let tempIdx = j\n      if ((i !== 0) && (i % 2 !== 0)) {\n        j++\n      }\n      tempGameRound[tempIdx].push(tempTeams[i])\n    }\n  }\n\n  // Add round scores to gamesheet\n  const addScores = e => {\n    e.preventDefault();\n    const teamObj = {};\n    const tempFinalObj = {...finalScores};\n    const tempArray = [...totalScore];\n\n    for (let x = 0; x < numberOfPlayers; x++) {\n      teamObj[\"Player #\" + (x + 1)] = {};\n      \n      if (!tempFinalObj[\"Player #\" + (x + 1)]) {\n        tempFinalObj[\"Player #\" + (x + 1)] = 0\n      }\n    }\n  \n    for (let i = 0; i < roundScore.length; i++) {\n      if (roundScore[i][0] === roundScore[i][1]) {\n        console.log('It\\'s a tie');\n\n        for (let j = 0; j < gameRound[i][0].length; j++) {\n          const firstTeam = gameRound[i][0][j];\n          teamObj[\"Player #\" + firstTeam].score = SCORE_TIE;\n          tempFinalObj[\"Player #\" + firstTeam] += SCORE_TIE;\n        }\n        for (let j = 0; j < gameRound[i][1].length; j++) {\n          const secondTeam = gameRound[i][1][j];\n          teamObj[\"Player #\" + secondTeam].score = SCORE_TIE;\n          tempFinalObj[\"Player #\" + secondTeam] += SCORE_TIE;\n        }\n      } else if (roundScore[i][0] < roundScore[i][1]) {\n        console.log('Second Team Won');\n\n        for (let j = 0; j < gameRound[i][0].length; j++) {\n          const firstTeam = gameRound[i][0][j];\n          teamObj[\"Player #\" + firstTeam].score = SCORE_LOSS;\n          tempFinalObj[\"Player #\" + firstTeam] += SCORE_LOSS;\n        }\n        for (let j = 0; j < gameRound[i][1].length; j++) {\n          const secondTeam = gameRound[i][1][j];\n          teamObj[\"Player #\" + secondTeam].score = SCORE_WIN;\n          tempFinalObj[\"Player #\" + secondTeam] += SCORE_WIN;\n        }\n      } else if (roundScore[i][0] > roundScore[i][1]) {\n        console.log('First Team won');\n\n        for (let j = 0; j < gameRound[i][0].length; j++) {\n          const firstTeam = gameRound[i][0][j];          \n          teamObj[\"Player #\" + firstTeam].score = SCORE_WIN;\n          tempFinalObj[\"Player #\" + firstTeam] += SCORE_WIN;\n        }\n        for (let j = 0; j < gameRound[i][1].length; j++) {\n          const secondTeam = gameRound[i][1][j];\n          teamObj[\"Player #\" + secondTeam].score = SCORE_LOSS;\n          tempFinalObj[\"Player #\" + secondTeam] += SCORE_LOSS;\n        }\n      }\n    }  \n    \n    tempArray.push(teamObj);\n    setTotalScore(tempArray);\n    setFinalScores(tempFinalObj);\n\n    setSubmitDisabled(true);\n    // setEndGameDisabled(false);\n    setStartRoundDisabled(false);\n  }\n\n  const checkForErrors = () => {\n    if (tempRoster.length < tempTeams.length) {\n      setError(`You need more players than number of teams: Players: ${tempRoster.length}, Teams: ${tempTeams.length}`);\n      return;\n    }\n\n    if (numberOfTeams % 2 !== 0) {\n      setError(\"You need an even number of teams.\");\n      return;\n    }\n\n    return setError(null);\n  };\n\n  const generateTeams = e => {\n    e.preventDefault();\n    setRoundNumber(roundNumber + 1);\n\n    addPlayers();\n    createRound();\n    \n    randomRoster = randomizePlayers(tempRoster);\n\n    createTeam();\n    createGameRound();\n    checkForErrors();\n    setRoundScore(tempScores)\n    setGameRound(tempGameRound);\n    setStartRoundDisabled(true);\n  };\n\n  // const endGame = () => {\n  //   alert('TEST: End game');\n  // }\n\n  return (\n    <div style={{padding: 10}}>\n      <form onSubmit={generateTeams}>\n        <div className=\"inputRow\">\n          <label><b>Number of Players: </b></label>\n          <input type=\"number\" min=\"1\" value={numberOfPlayers} onChange={e => setNumberOfPlayers(parseInt(e.target.value))} />\n        </div>\n        <div className=\"inputRow\">\n          <label><b>Number of Teams: </b></label>\n          <input type=\"number\" min=\"1\" value={numberOfTeams} onChange={ e => setNumberOfTeams(parseInt(e.target.value)) } />\n        </div>\n        <div className=\"inputRow\">\n          <button disabled={startRoundDisabled} style={{ fontSize: 24, marginBottom: 10, fontWeight: 700}} type=\"submit\">Start Round</button>\n          {/* <button onClick={endGame} type=\"button\" disabled={endGameDisabled}>End Game</button> */}\n        </div>\n      </form>\n      <br />\n      {error && (\n        <div className=\"inputRow\" style={{color: 'red'}}>{error}</div>\n      )}\n  \n      {!error && gameRound.length > 0 &&\n        <div>\n          <form onSubmit={addScores}>\n            <div style={{display: 'flex', marginBottom: 10}}>\n              <div style={{ fontSize: 30, marginBottom: 10, fontWeight: 700, flex: 1 }}>Round {roundNumber}</div>\n              {/* <button type=\"submit\" disabled={submitDisabled}>Submit Scores</button> */}\n            </div>\n\n            {!error && gameRound.map((game, idx) => (\n              <div key={game} style={{ background: '#eee', padding: 10, marginBottom: 10}}>\n                <div style={{ fontSize: 26, fontWeight: 700, paddingBottom: 10 }}>\n                  Field {idx + 1}\n                </div>\n                {game.map((team, i) => (\n                  <div key={team} style={{display: 'flex', alignItems: 'center', padding: 10, backgroundColor: i === 0 ? '#f66' : '#aaf' }}>\n                    <div style={{flex: 4}}>  \n                      <span style={{ fontSize: 22, fontWeight: 'bold' }}>Team {i + 1}: </span>\n                      {team.map((player, i) => (\n                        <span key={player}>{player}{i < team.length - 1 ? ', ' : null}</span>\n                      ))}\n                    </div>\n                    <div style={{flex: 1, textAlign: 'right'}}>\n                      <input \n                        style={{fontSize: 28, width: 50, height:50, textAlign: 'center'}}\n                        data-field={idx}\n                        data-team={i}\n                        type=\"number\" \n                        min=\"0\"\n                        onChange={addScore}\n                      />\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ))}\n            <div style={{display: 'flex', marginBottom: 10}}>\n              <div style={{ fontSize: 30, marginBottom: 10, fontWeight: 700, flex: 1 }}></div>\n              <button style={{ fontSize: 24, marginBottom: 10, fontWeight: 700}} type=\"submit\" disabled={submitDisabled}>Submit Scores</button>\n            </div>\n          </form>\n          \n          { \n            Object.keys(finalScores).map(item => {\n              const highlight = finalScores[item] === highestScore ? 'highlight' : '';\n              return <div key={item}><span className={highlight}>{item}: {finalScores[item]}</span></div>\n            })\n          }\n        </div>\n      }\n    </div>\n  )\n};\n\nexport default TeamCreator\n","import './App.css';\n\nimport TeamCreator from './components/TeamCreator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TeamCreator />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();"],"sourceRoot":""}