{"version":3,"sources":["components/TeamCreator.jsx","App.js","index.js"],"names":["TeamCreator","useState","numberOfPlayers","setNumberOfPlayers","numberOfTeams","setNumberOfTeams","teams","setTeams","error","setError","teamRoster","tempTeams","onSubmit","e","preventDefault","i","push","addPlayers","createRound","randomRoster","originalPlayers","randomPlayers","length","j","Math","floor","random","temp","randomizePlayers","k","className","type","min","value","onChange","target","style","color","map","team","idx","player","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAqGeA,EAnGK,WAAO,IAAD,EACsBC,mBAAS,IAD/B,mBACjBC,EADiB,KACAC,EADA,OAEkBF,mBAAS,GAF3B,mBAEjBG,EAFiB,KAEFC,EAFE,OAGEJ,mBAAS,IAHX,mBAGjBK,EAHiB,KAGVC,EAHU,OAIEN,mBAAS,MAJX,mBAIjBO,EAJiB,KAIVC,EAJU,KAMpBC,EAAa,GACbC,EAAY,GA4DhB,OACE,gCACE,uBAAMC,SAjCY,SAACC,GACrBA,EAAEC,iBA3Be,WACjBJ,EAAa,GACb,IAAK,IAAIK,EAAI,EAAGA,GAAKb,EAAiBa,IACpCL,EAAWM,KAAKD,GA0BlBE,GAtBkB,WAClBN,EAAY,GACZ,IAAK,IAAII,EAAI,EAAGA,EAAIX,EAAeW,IACjCJ,EAAUK,KAAK,IAoBjBE,GAKA,IAHA,IAAMC,EAlBiB,SAACC,GAExB,IADA,IAAMC,EAAgBD,EACbL,EAAIM,EAAcC,OAAS,EAAGP,EAAI,EAAGA,IAAK,CACjD,IAAIQ,EAAIC,KAAKC,MAAMD,KAAKE,UAAYX,EAAI,IACpCY,EAAON,EAAcN,GACzBM,EAAcN,GAAKM,EAAcE,GACjCF,EAAcE,GAAKI,EAGrB,OAAON,EAScO,CAAiBlB,GAClCK,EAAI,EAECQ,EAAI,EAAGA,EAAIb,EAAWY,OAASlB,EAAemB,IACrD,IAAK,IAAIM,EAAI,EAAGA,EAAIzB,EAAeyB,IAC7Bd,EAAIL,EAAWY,SACjBX,EAAUkB,GAAGb,KAAKG,EAAaJ,IAC/BA,KAKFL,EAAWY,OAASX,EAAUW,OAChCb,EAAS,wDAAD,OAAyDC,EAAWY,OAApE,oBAAsFX,EAAUW,SAItGlB,EAAgB,IAAM,GAI1BK,EAAS,MACTF,EAASI,IAJPF,EAAS,qCAST,UACE,sBAAKqB,UAAU,WAAf,UACE,gCAAO,sDACP,uBAAOC,KAAK,SAASC,IAAI,IAAIC,MAAO/B,EAAiBgC,SAAU,SAAArB,GAAC,OAAIV,EAAmBU,EAAEsB,OAAOF,aAElG,sBAAKH,UAAU,WAAf,UACE,gCAAO,oDACP,uBAAOC,KAAK,SAASC,IAAI,IAAIC,MAAO7B,EAAe8B,SAAW,SAAArB,GAAC,OAAIR,EAAiBQ,EAAEsB,OAAOF,aAE/F,qBAAKH,UAAU,WAAf,SACE,wBAAQC,KAAK,SAAb,0CAGJ,uBACCvB,GACC,qBAAKsB,UAAU,WAAWM,MAAO,CAACC,MAAO,OAAzC,SAAkD7B,IAEpD,8BACGF,EAAMgC,KAAI,SAACC,EAAMC,GAAP,OACT,sBAAKV,UAAU,WAAf,UAAqC,sCAASU,EAAM,EAAf,OAArC,IAA6D,IAC5DD,EAAKD,KAAI,SAACG,EAAQ1B,GAAT,OACR,iCAAoB0B,EAAQ1B,EAAIwB,EAAKjB,OAAS,EAAI,KAAO,OAA9CmB,QAFkBF,YC9E1BG,MARf,WACE,OACE,qBAAKZ,UAAU,MAAf,SACE,cAAC,EAAD,OCDNa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6c884a5f.chunk.js","sourcesContent":["import React, {useState} from 'react'\n\nconst TeamCreator = () => {\n  const [numberOfPlayers, setNumberOfPlayers] = useState(16);\n  const [numberOfTeams, setNumberOfTeams] = useState(4);\n  const [teams, setTeams] = useState([]);\n  const [error, setError] = useState(null);\n\n  let teamRoster = []\n  let tempTeams = [];\n  \n\n  const addPlayers = () => {\n    teamRoster = [];\n    for (let i = 1; i <= numberOfPlayers; i++) {\n      teamRoster.push(i);\n    }\n  };\n\n  const createRound = () => {\n    tempTeams = []; // clear teams\n    for (let i = 0; i < numberOfTeams; i++) {\n      tempTeams.push([]);\n    }\n  };\n\n  const randomizePlayers = (originalPlayers) => {\n    const randomPlayers = originalPlayers\n    for (var i = randomPlayers.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = randomPlayers[i];\n      randomPlayers[i] = randomPlayers[j];\n      randomPlayers[j] = temp;\n    }\n    \n    return randomPlayers;\n  };\n\n  const generateTeams = (e) => {\n    e.preventDefault();\n    \n    addPlayers();\n    createRound();\n\n    const randomRoster = randomizePlayers(teamRoster);\n    let i = 0;\n    \n    for (let j = 0; j < teamRoster.length / numberOfTeams; j++) {\n      for (let k = 0; k < numberOfTeams; k++) {\n        if (i < teamRoster.length) {\n          tempTeams[k].push(randomRoster[i])\n          i++;\n        }\n      }    \n    }\n    \n    if (teamRoster.length < tempTeams.length) {\n      setError(`You need more players than number of teams: Players: ${teamRoster.length}, Teams: ${tempTeams.length}`);\n      return;\n    }\n\n    if (numberOfTeams % 2 !== 0) {\n      setError(\"You need an even number of teams\");\n      return;\n    }\n    setError(null)\n    setTeams(tempTeams);  \n  };\n\n  return (\n    <div>\n      <form onSubmit={generateTeams}>\n        <div className=\"inputRow\">\n          <label><b>Number of Players: </b></label>\n          <input type=\"number\" min=\"1\" value={numberOfPlayers} onChange={e => setNumberOfPlayers(e.target.value)} />\n        </div>\n        <div className=\"inputRow\">\n          <label><b>Number of Teams: </b></label>\n          <input type=\"number\" min=\"1\" value={numberOfTeams} onChange={ e => setNumberOfTeams(e.target.value) } />\n        </div>\n        <div className=\"inputRow\">\n          <button type=\"submit\">Click to generate teams</button>\n        </div>\n      </form>\n      <br />\n      {error && (\n        <div className=\"inputRow\" style={{color: 'red'}}>{error}</div>\n      )}\n      <div>\n        {teams.map((team, idx) => (\n          <div className=\"inputRow\" key={team}><b>Team {idx + 1}:</b> {' '}\n          {team.map((player, i) => (\n            <span key={player}>{player}{i < team.length - 1 ? ', ' : null}</span>\n          ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default TeamCreator\n","import './App.css';\n\nimport TeamCreator from './components/TeamCreator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TeamCreator />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();"],"sourceRoot":""}